plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'kz.geekprtnrs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.2")
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'kz.geekprtnrs'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    //uniquecode-service
    if (project.name == 'uniquecode-service') {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            implementation 'org.springframework.boot:spring-boot-starter-web'
            developmentOnly 'org.springframework.boot:spring-boot-devtools'
            runtimeOnly 'org.postgresql:postgresql'
            implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.2'
            implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.17.0'

        }
    }

    //config-server
    if (project.name == 'config-server') {
        dependencies {

            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            implementation 'org.springframework.cloud:spring-cloud-config-server'
        }

        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }
        }
    }
}
